/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.szpital;

import java.util.LinkedHashMap;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Lenovo
 */
public class Ekran_ordynator_lekarz extends javax.swing.JFrame {

    private EkranStartowy mainGui;
    private Uzytkownik doctor;
    private DodawanieRezerwacji screenAddReservation;
    private Powiadomienia screenAlerts;
    private ZastosowanieSal screenRoomType;
    private SprzetRezerwacje screenEqReservation;
    private RepoRezerwacja reservations;
    private RepoSal rooms;
    
    public Ekran_ordynator_lekarz(EkranStartowy gui, Uzytkownik user, RepoRezerwacja res, RepoSal repoSal) {
        this.mainGui = gui;
        this.doctor = user;
        this.reservations = res;
        this.rooms = repoSal;
        this.screenAddReservation = new DodawanieRezerwacji(this, this.rooms);
        this.screenAlerts = new Powiadomienia(this);
        this.screenRoomType = new ZastosowanieSal(this, repoSal);
        this.screenEqReservation = new SprzetRezerwacje(this);
        initComponents();
        this.openScreen();
    }

    //Funkcja aktualizująca i włączająca ekran 
    public void openScreen(){
        this.update();
          
        this.setVisible(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelScreenName = new javax.swing.JLabel();
        jButtonAlerts = new javax.swing.JButton();
        jButtonEqInReservation = new javax.swing.JButton();
        jButtonChangeRoomType = new javax.swing.JButton();
        jButtonLogOut = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSearchText = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jButtonAddReservation = new javax.swing.JButton();
        jLabelCategory = new javax.swing.JLabel();
        CategoryComboBox = new javax.swing.JComboBox<>();
        jButtonDeleteReseravtion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelScreenName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelScreenName.setText("Zalogowano jako "+ doctor.getSort() + " "
            +  doctor.getName() + " " + doctor.getSurname());

        jButtonAlerts.setText("Powiadomienia");
        jButtonAlerts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlertsActionPerformed(evt);
            }
        });

        jButtonEqInReservation.setText("Sprzęt w rezerwacjach");
        jButtonEqInReservation.setToolTipText("");
        jButtonEqInReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEqInReservationActionPerformed(evt);
            }
        });

        jButtonChangeRoomType.setText("Zastosowanie sal");
        jButtonChangeRoomType.setToolTipText("");
        jButtonChangeRoomType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangeRoomTypeActionPerformed(evt);
            }
        });

        jButtonLogOut.setText("Wyloguj");
        jButtonLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLogOutActionPerformed(evt);
            }
        });

        jTable.setModel( new RezerwacjaTableModel(this.reservations.getReservations())
        );
        jTable.setToolTipText("");
        jScrollPane3.setViewportView(jTable);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Rezerwacje");

        jLabel3.setText("Szukanie rezerwacji:");

        jButtonSearch.setText("Szukaj");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        jButtonAddReservation.setText("Dodaj rezerwację");
        jButtonAddReservation.setToolTipText("");
        jButtonAddReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddReservationActionPerformed(evt);
            }
        });

        jLabelCategory.setText("Wybierz kategorię, po której chcesz coś znaleźć:");

        CategoryComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButtonDeleteReseravtion.setText("Usuń rezerwację");
        jButtonDeleteReseravtion.setToolTipText("");
        jButtonDeleteReseravtion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteReseravtionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonLogOut))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(CategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jSearchText, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jButtonSearch))
                                                .addComponent(jButtonEqInReservation, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                                                .addComponent(jButtonChangeRoomType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButtonAlerts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButtonAddReservation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButtonDeleteReseravtion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)))))
                                .addGap(9, 9, 9)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelScreenName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addGap(253, 253, 253)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelScreenName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSearchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonSearch))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAddReservation)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAlerts)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonEqInReservation)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonDeleteReseravtion)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonChangeRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 24, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonLogOut)
                .addContainerGap())
        );

        if("lekarz".equals(doctor.getSort())){
            jButtonChangeRoomType.setVisible(false);
        }

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAlertsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlertsActionPerformed
        this.setVisible(false);
        
        screenAlerts.openScreen();
    }//GEN-LAST:event_jButtonAlertsActionPerformed

    private void jButtonEqInReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEqInReservationActionPerformed
        this.setVisible(false);
        
        screenEqReservation.openScreen();
    }//GEN-LAST:event_jButtonEqInReservationActionPerformed

    private void jButtonChangeRoomTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangeRoomTypeActionPerformed
        this.setVisible(false);
        
        screenRoomType.openScreen();
    }//GEN-LAST:event_jButtonChangeRoomTypeActionPerformed

    private void jButtonAddReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddReservationActionPerformed
        this.setVisible(false);
        
        screenAddReservation.openScreen( this.reservations, this.doctor);
    }//GEN-LAST:event_jButtonAddReservationActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        TableRowSorter mySorter = new TableRowSorter();
        String text = jSearchText.getText();
        String category = CategoryComboBox.getItemAt(0);
        mySorter.setRowFilter(new MyFilter(text, category));
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jButtonLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLogOutActionPerformed
        this.setVisible(false);
        mainGui.logOut();
    }//GEN-LAST:event_jButtonLogOutActionPerformed

    private void jButtonDeleteReseravtionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteReseravtionActionPerformed
                
        int answear = JOptionPane.showConfirmDialog(this, "Na penwo chcesz usunąć wybrane urządzenie?", "Usuwanie sprzętu", JOptionPane.YES_NO_OPTION);
        if(answear == 0){
            if(jTable.getSelectedRowCount() == 1){

                this.reservations.deleteReservation((int) jTable.getValueAt(jTable.getSelectedRow(), 0));
            } else{
                    if(jTable.getRowCount() == 0){
                    JOptionPane.showMessageDialog(this, "Tablica jest pusta");
                }else{
                    JOptionPane.showMessageDialog(this, "Prosze zaznaczyć tylko jedno urządzenie do usunięcia");
                }
                
            }   
        } 
        this.openScreen();
         
    }//GEN-LAST:event_jButtonDeleteReseravtionActionPerformed

    private void update(){
        RezerwacjaTableModel model = (RezerwacjaTableModel) jTable.getModel();
        model.update();    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CategoryComboBox;
    private javax.swing.JButton jButtonAddReservation;
    private javax.swing.JButton jButtonAlerts;
    private javax.swing.JButton jButtonChangeRoomType;
    private javax.swing.JButton jButtonDeleteReseravtion;
    private javax.swing.JButton jButtonEqInReservation;
    private javax.swing.JButton jButtonLogOut;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelCategory;
    private javax.swing.JLabel jLabelScreenName;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jSearchText;
    private javax.swing.JTable jTable;
    // End of variables declaration//GEN-END:variables
}

class MyFilter extends RowFilter{
    
    private String searchText, category;
    
    MyFilter(String searchText, String category)
    {
        this.searchText = searchText;
        this.category = category;
    }
    
    @Override
    public boolean include(Entry entry)
    {
        int index = 0;
        switch(category){
            case "ID rezerwacji": index=0;
            break;
            case "Numer sali": index=1;
            break;
            case "Typ sali": index=2;
            break;
            case "Imie":  index=3;
            break;
            case "Nazwisko:": index=4;
            break;
            case "Data":  index=5;
            break;
            case "Godzina": index=6;
            break;
        }
        
        return entry.getStringValue(index).indexOf(searchText)>=0;
    }

}