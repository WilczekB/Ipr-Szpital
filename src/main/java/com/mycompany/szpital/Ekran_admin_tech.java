/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.szpital;

import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Lenovo
 */
public class Ekran_admin_tech extends javax.swing.JFrame {

    private EkranStartowy mainGui;
    private DodawanieSprzetu addEqGui;
    private ZarzadzanieStatusemSprzetu changEqStatus;
    private Uzytkownik admin;
    private RepoSprzet repoEquip;
    
    public Ekran_admin_tech(EkranStartowy gui, Uzytkownik user, RepoSprzet repo) {
        mainGui = gui;
        admin = user;
        repoEquip = repo;
        addEqGui = new DodawanieSprzetu(this, repoEquip);
        changEqStatus = new ZarzadzanieStatusemSprzetu(this, repoEquip);
        initComponents();
        this.openScreen();
    }
    
    //Funkcja odpowiadająca za odświeżenie ekranu(listy) i jego włączenie
    public void openScreen(){
        
        this.update();
        this.setVisible(true);
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelScreenName = new javax.swing.JLabel();
        jButtonAddEq = new javax.swing.JButton();
        jButtonDeleteEq = new javax.swing.JButton();
        jButtonChangeEqStatus = new javax.swing.JButton();
        jButtonLogOut = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jLabelCategory = new javax.swing.JLabel();
        CategoryComboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jSearchText = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelScreenName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelScreenName.setText("Zalogowano jako administrator techniczny " +
            " " + admin.getName() + " " + admin.getSurname());

        jButtonAddEq.setText("Dodawanie sprzętu");
        jButtonAddEq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddEqActionPerformed(evt);
            }
        });

        jButtonDeleteEq.setText("Usuwanie sprzętu");
        jButtonDeleteEq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteEqActionPerformed(evt);
            }
        });

        jButtonChangeEqStatus.setText("Zarządzanie statusem sprzętu");
        jButtonChangeEqStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangeEqStatusActionPerformed(evt);
            }
        });

        jButtonLogOut.setText("Wyloguj");
        jButtonLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLogOutActionPerformed(evt);
            }
        });

        jTable.setModel(new SprzetTableModel(repoEquip.getEquipment()));
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable);

        jLabelCategory.setText("Wybierz kategorię, po której chcesz coś znaleźć:");

        CategoryComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Numer ID", "Kategoria", "Nazwa", "Dezynfekcja", "Przydział"}));

        jLabel3.setText("Szukanie rezerwacji:");

        jButtonSearch.setText("Szukaj");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jButtonChangeEqStatus, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButtonDeleteEq, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButtonAddEq, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(23, 23, 23)
                                        .addComponent(jLabelScreenName))
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabelCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jSearchText, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonSearch)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabelScreenName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButtonAddEq)
                .addGap(18, 18, 18)
                .addComponent(jButtonDeleteEq)
                .addGap(18, 18, 18)
                .addComponent(jButtonChangeEqStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSearchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearch))
                .addContainerGap(166, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonLogOut)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddEqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddEqActionPerformed
        this.setVisible(false);
        addEqGui.openScreen();
        
    }//GEN-LAST:event_jButtonAddEqActionPerformed

    private void jButtonDeleteEqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteEqActionPerformed
        
        int answear = JOptionPane.showConfirmDialog(this, "Na penwo chcesz usunąć wybrane urządzenie?", "Usuwanie sprzętu", JOptionPane.YES_NO_OPTION);
        if(answear == 0){
            if(jTable.getSelectedRowCount() == 1){

                repoEquip.deleteDevice((int) jTable.getValueAt(jTable.getSelectedRow(), 0));
                this.update();
            } else{
                    if(jTable.getRowCount() == 0){
                    JOptionPane.showMessageDialog(this, "Tablica jest pusta");
                }else{
                    JOptionPane.showMessageDialog(this, "Prosze zaznaczyć tylko jedno urządzenie do usunięcia");
                }
                this.update();
            }   
        } 
         
    }//GEN-LAST:event_jButtonDeleteEqActionPerformed

    private void jButtonChangeEqStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangeEqStatusActionPerformed
        this.setVisible(false);
        if(jTable.getSelectedRowCount() == 1){
        int id = (int) jTable.getValueAt(jTable.getSelectedRow(), 0);
        changEqStatus.openScreen(id);
        } else{
            if(jTable.getRowCount() == 0){
                JOptionPane.showMessageDialog(null, "Tablica jest pusta");
                
            }else{
                JOptionPane.showMessageDialog(null, "Prosze zaznaczyć tylko jedno urządzenie do modyfikacji");
                
            }
            this.setVisible(true);
        }
        
    }//GEN-LAST:event_jButtonChangeEqStatusActionPerformed

    private void jButtonLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLogOutActionPerformed
        repoEquip.writeToDataBase("./src/main/java/com/mycompany/szpital/Data/Sprzet.txt");
        this.setVisible(false);
        mainGui.logOut();
    }//GEN-LAST:event_jButtonLogOutActionPerformed

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked
        int id = (int) jTable.getValueAt(jTable.getSelectedRow(), 0);
    }//GEN-LAST:event_jTableMouseClicked

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        SprzetTableModel model = (SprzetTableModel) jTable.getModel();
        TableRowSorter mySorter = new TableRowSorter(model);
        jTable.setRowSorter(mySorter);
        String text = jSearchText.getText();
        String category = CategoryComboBox.getSelectedItem().toString();
        mySorter.setRowFilter(new MyFilter(text, category));
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void update(){ 
        SprzetTableModel model = (SprzetTableModel) jTable.getModel();
        model.update();    
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CategoryComboBox;
    private javax.swing.JButton jButtonAddEq;
    private javax.swing.JButton jButtonChangeEqStatus;
    private javax.swing.JButton jButtonDeleteEq;
    private javax.swing.JButton jButtonLogOut;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelCategory;
    private javax.swing.JLabel jLabelScreenName;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jSearchText;
    private javax.swing.JTable jTable;
    // End of variables declaration//GEN-END:variables
          
}

class MyFilter extends RowFilter{

        private String searchText, category;

        MyFilter(String searchText, String category)
        {
            this.searchText = searchText;
            this.category = category;
        }

        @Override
        public boolean include(RowFilter.Entry entry)
        {
            int index = 0;
            switch(category){
                case "Numer ID": index=0;
                break;
                case "Kategoria": index=1;
                break;
                case "Nazwa": index=2;
                break;
                case "Czy zdezynfekowano":  index=3;
                break;
                case "Przydział": index=4;
                break;
            }

            return entry.getStringValue(index).indexOf(searchText)>=0;
        }
}
